/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SubscriptionCouponAddDto.Builder.class)
public final class SubscriptionCouponAddDto {
    private final String orgId;

    private final String couponCode;

    private final Map<String, Object> additionalProperties;

    private SubscriptionCouponAddDto(String orgId, String couponCode, Map<String, Object> additionalProperties) {
        this.orgId = orgId;
        this.couponCode = couponCode;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the ID of the org within the subscription which the coupon will take effect on.
     */
    @JsonProperty("orgId")
    public String getOrgId() {
        return orgId;
    }

    /**
     * @return This is the code of the coupon to apply to the subscription.
     */
    @JsonProperty("couponCode")
    public String getCouponCode() {
        return couponCode;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SubscriptionCouponAddDto && equalTo((SubscriptionCouponAddDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SubscriptionCouponAddDto other) {
        return orgId.equals(other.orgId) && couponCode.equals(other.couponCode);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.orgId, this.couponCode);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static OrgIdStage builder() {
        return new Builder();
    }

    public interface OrgIdStage {
        CouponCodeStage orgId(@NotNull String orgId);

        Builder from(SubscriptionCouponAddDto other);
    }

    public interface CouponCodeStage {
        _FinalStage couponCode(@NotNull String couponCode);
    }

    public interface _FinalStage {
        SubscriptionCouponAddDto build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements OrgIdStage, CouponCodeStage, _FinalStage {
        private String orgId;

        private String couponCode;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SubscriptionCouponAddDto other) {
            orgId(other.getOrgId());
            couponCode(other.getCouponCode());
            return this;
        }

        /**
         * <p>This is the ID of the org within the subscription which the coupon will take effect on.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("orgId")
        public CouponCodeStage orgId(@NotNull String orgId) {
            this.orgId = Objects.requireNonNull(orgId, "orgId must not be null");
            return this;
        }

        /**
         * <p>This is the code of the coupon to apply to the subscription.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("couponCode")
        public _FinalStage couponCode(@NotNull String couponCode) {
            this.couponCode = Objects.requireNonNull(couponCode, "couponCode must not be null");
            return this;
        }

        @java.lang.Override
        public SubscriptionCouponAddDto build() {
            return new SubscriptionCouponAddDto(orgId, couponCode, additionalProperties);
        }
    }
}
