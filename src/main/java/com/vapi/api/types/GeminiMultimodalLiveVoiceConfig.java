/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GeminiMultimodalLiveVoiceConfig.Builder.class)
public final class GeminiMultimodalLiveVoiceConfig {
    private final GeminiMultimodalLivePrebuiltVoiceConfig prebuiltVoiceConfig;

    private final Map<String, Object> additionalProperties;

    private GeminiMultimodalLiveVoiceConfig(
            GeminiMultimodalLivePrebuiltVoiceConfig prebuiltVoiceConfig, Map<String, Object> additionalProperties) {
        this.prebuiltVoiceConfig = prebuiltVoiceConfig;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("prebuiltVoiceConfig")
    public GeminiMultimodalLivePrebuiltVoiceConfig getPrebuiltVoiceConfig() {
        return prebuiltVoiceConfig;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GeminiMultimodalLiveVoiceConfig && equalTo((GeminiMultimodalLiveVoiceConfig) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GeminiMultimodalLiveVoiceConfig other) {
        return prebuiltVoiceConfig.equals(other.prebuiltVoiceConfig);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.prebuiltVoiceConfig);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PrebuiltVoiceConfigStage builder() {
        return new Builder();
    }

    public interface PrebuiltVoiceConfigStage {
        _FinalStage prebuiltVoiceConfig(@NotNull GeminiMultimodalLivePrebuiltVoiceConfig prebuiltVoiceConfig);

        Builder from(GeminiMultimodalLiveVoiceConfig other);
    }

    public interface _FinalStage {
        GeminiMultimodalLiveVoiceConfig build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PrebuiltVoiceConfigStage, _FinalStage {
        private GeminiMultimodalLivePrebuiltVoiceConfig prebuiltVoiceConfig;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GeminiMultimodalLiveVoiceConfig other) {
            prebuiltVoiceConfig(other.getPrebuiltVoiceConfig());
            return this;
        }

        @java.lang.Override
        @JsonSetter("prebuiltVoiceConfig")
        public _FinalStage prebuiltVoiceConfig(@NotNull GeminiMultimodalLivePrebuiltVoiceConfig prebuiltVoiceConfig) {
            this.prebuiltVoiceConfig =
                    Objects.requireNonNull(prebuiltVoiceConfig, "prebuiltVoiceConfig must not be null");
            return this;
        }

        @java.lang.Override
        public GeminiMultimodalLiveVoiceConfig build() {
            return new GeminiMultimodalLiveVoiceConfig(prebuiltVoiceConfig, additionalProperties);
        }
    }
}
