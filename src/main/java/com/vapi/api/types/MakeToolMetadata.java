/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MakeToolMetadata.Builder.class)
public final class MakeToolMetadata {
    private final Optional<Double> scenarioId;

    private final Optional<Double> triggerHookId;

    private final Map<String, Object> additionalProperties;

    private MakeToolMetadata(
            Optional<Double> scenarioId, Optional<Double> triggerHookId, Map<String, Object> additionalProperties) {
        this.scenarioId = scenarioId;
        this.triggerHookId = triggerHookId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("scenarioId")
    public Optional<Double> getScenarioId() {
        return scenarioId;
    }

    @JsonProperty("triggerHookId")
    public Optional<Double> getTriggerHookId() {
        return triggerHookId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof MakeToolMetadata && equalTo((MakeToolMetadata) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(MakeToolMetadata other) {
        return scenarioId.equals(other.scenarioId) && triggerHookId.equals(other.triggerHookId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.scenarioId, this.triggerHookId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Double> scenarioId = Optional.empty();

        private Optional<Double> triggerHookId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(MakeToolMetadata other) {
            scenarioId(other.getScenarioId());
            triggerHookId(other.getTriggerHookId());
            return this;
        }

        @JsonSetter(value = "scenarioId", nulls = Nulls.SKIP)
        public Builder scenarioId(Optional<Double> scenarioId) {
            this.scenarioId = scenarioId;
            return this;
        }

        public Builder scenarioId(Double scenarioId) {
            this.scenarioId = Optional.ofNullable(scenarioId);
            return this;
        }

        @JsonSetter(value = "triggerHookId", nulls = Nulls.SKIP)
        public Builder triggerHookId(Optional<Double> triggerHookId) {
            this.triggerHookId = triggerHookId;
            return this;
        }

        public Builder triggerHookId(Double triggerHookId) {
            this.triggerHookId = Optional.ofNullable(triggerHookId);
            return this;
        }

        public MakeToolMetadata build() {
            return new MakeToolMetadata(scenarioId, triggerHookId, additionalProperties);
        }
    }
}
