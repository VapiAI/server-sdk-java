/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GeminiMultimodalLiveSpeechConfig.Builder.class)
public final class GeminiMultimodalLiveSpeechConfig {
    private final GeminiMultimodalLiveVoiceConfig voiceConfig;

    private final Map<String, Object> additionalProperties;

    private GeminiMultimodalLiveSpeechConfig(
            GeminiMultimodalLiveVoiceConfig voiceConfig, Map<String, Object> additionalProperties) {
        this.voiceConfig = voiceConfig;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("voiceConfig")
    public GeminiMultimodalLiveVoiceConfig getVoiceConfig() {
        return voiceConfig;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GeminiMultimodalLiveSpeechConfig && equalTo((GeminiMultimodalLiveSpeechConfig) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GeminiMultimodalLiveSpeechConfig other) {
        return voiceConfig.equals(other.voiceConfig);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.voiceConfig);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static VoiceConfigStage builder() {
        return new Builder();
    }

    public interface VoiceConfigStage {
        _FinalStage voiceConfig(@NotNull GeminiMultimodalLiveVoiceConfig voiceConfig);

        Builder from(GeminiMultimodalLiveSpeechConfig other);
    }

    public interface _FinalStage {
        GeminiMultimodalLiveSpeechConfig build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements VoiceConfigStage, _FinalStage {
        private GeminiMultimodalLiveVoiceConfig voiceConfig;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GeminiMultimodalLiveSpeechConfig other) {
            voiceConfig(other.getVoiceConfig());
            return this;
        }

        @java.lang.Override
        @JsonSetter("voiceConfig")
        public _FinalStage voiceConfig(@NotNull GeminiMultimodalLiveVoiceConfig voiceConfig) {
            this.voiceConfig = Objects.requireNonNull(voiceConfig, "voiceConfig must not be null");
            return this;
        }

        @java.lang.Override
        public GeminiMultimodalLiveSpeechConfig build() {
            return new GeminiMultimodalLiveSpeechConfig(voiceConfig, additionalProperties);
        }
    }
}
