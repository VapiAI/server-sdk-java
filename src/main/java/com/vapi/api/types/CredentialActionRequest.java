/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CredentialActionRequest.Builder.class)
public final class CredentialActionRequest {
    private final String actionName;

    private final Map<String, Object> input;

    private final Map<String, Object> additionalProperties;

    private CredentialActionRequest(
            String actionName, Map<String, Object> input, Map<String, Object> additionalProperties) {
        this.actionName = actionName;
        this.input = input;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("action_name")
    public String getActionName() {
        return actionName;
    }

    @JsonProperty("input")
    public Map<String, Object> getInput() {
        return input;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CredentialActionRequest && equalTo((CredentialActionRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CredentialActionRequest other) {
        return actionName.equals(other.actionName) && input.equals(other.input);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.actionName, this.input);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ActionNameStage builder() {
        return new Builder();
    }

    public interface ActionNameStage {
        _FinalStage actionName(@NotNull String actionName);

        Builder from(CredentialActionRequest other);
    }

    public interface _FinalStage {
        CredentialActionRequest build();

        _FinalStage input(Map<String, Object> input);

        _FinalStage putAllInput(Map<String, Object> input);

        _FinalStage input(String key, Object value);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ActionNameStage, _FinalStage {
        private String actionName;

        private Map<String, Object> input = new LinkedHashMap<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CredentialActionRequest other) {
            actionName(other.getActionName());
            input(other.getInput());
            return this;
        }

        @java.lang.Override
        @JsonSetter("action_name")
        public _FinalStage actionName(@NotNull String actionName) {
            this.actionName = Objects.requireNonNull(actionName, "actionName must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage input(String key, Object value) {
            this.input.put(key, value);
            return this;
        }

        @java.lang.Override
        public _FinalStage putAllInput(Map<String, Object> input) {
            this.input.putAll(input);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "input", nulls = Nulls.SKIP)
        public _FinalStage input(Map<String, Object> input) {
            this.input.clear();
            this.input.putAll(input);
            return this;
        }

        @java.lang.Override
        public CredentialActionRequest build() {
            return new CredentialActionRequest(actionName, input, additionalProperties);
        }
    }
}
