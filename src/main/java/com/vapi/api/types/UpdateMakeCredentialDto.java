/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateMakeCredentialDto.Builder.class)
public final class UpdateMakeCredentialDto {
    private final String teamId;

    private final String region;

    private final String apiKey;

    private final Map<String, Object> additionalProperties;

    private UpdateMakeCredentialDto(
            String teamId, String region, String apiKey, Map<String, Object> additionalProperties) {
        this.teamId = teamId;
        this.region = region;
        this.apiKey = apiKey;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("provider")
    public String getProvider() {
        return "make";
    }

    /**
     * @return Team ID
     */
    @JsonProperty("teamId")
    public String getTeamId() {
        return teamId;
    }

    /**
     * @return Region of your application. For example: eu1, eu2, us1, us2
     */
    @JsonProperty("region")
    public String getRegion() {
        return region;
    }

    /**
     * @return This is not returned in the API.
     */
    @JsonProperty("apiKey")
    public String getApiKey() {
        return apiKey;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateMakeCredentialDto && equalTo((UpdateMakeCredentialDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateMakeCredentialDto other) {
        return teamId.equals(other.teamId) && region.equals(other.region) && apiKey.equals(other.apiKey);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.teamId, this.region, this.apiKey);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TeamIdStage builder() {
        return new Builder();
    }

    public interface TeamIdStage {
        RegionStage teamId(@NotNull String teamId);

        Builder from(UpdateMakeCredentialDto other);
    }

    public interface RegionStage {
        ApiKeyStage region(@NotNull String region);
    }

    public interface ApiKeyStage {
        _FinalStage apiKey(@NotNull String apiKey);
    }

    public interface _FinalStage {
        UpdateMakeCredentialDto build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TeamIdStage, RegionStage, ApiKeyStage, _FinalStage {
        private String teamId;

        private String region;

        private String apiKey;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(UpdateMakeCredentialDto other) {
            teamId(other.getTeamId());
            region(other.getRegion());
            apiKey(other.getApiKey());
            return this;
        }

        /**
         * <p>Team ID</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("teamId")
        public RegionStage teamId(@NotNull String teamId) {
            this.teamId = Objects.requireNonNull(teamId, "teamId must not be null");
            return this;
        }

        /**
         * <p>Region of your application. For example: eu1, eu2, us1, us2</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("region")
        public ApiKeyStage region(@NotNull String region) {
            this.region = Objects.requireNonNull(region, "region must not be null");
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("apiKey")
        public _FinalStage apiKey(@NotNull String apiKey) {
            this.apiKey = Objects.requireNonNull(apiKey, "apiKey must not be null");
            return this;
        }

        @java.lang.Override
        public UpdateMakeCredentialDto build() {
            return new UpdateMakeCredentialDto(teamId, region, apiKey, additionalProperties);
        }
    }
}
