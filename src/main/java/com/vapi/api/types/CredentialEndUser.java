/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CredentialEndUser.Builder.class)
public final class CredentialEndUser {
    private final String endUserId;

    private final String organizationId;

    private final Map<String, Object> additionalProperties;

    private CredentialEndUser(String endUserId, String organizationId, Map<String, Object> additionalProperties) {
        this.endUserId = endUserId;
        this.organizationId = organizationId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("endUserId")
    public String getEndUserId() {
        return endUserId;
    }

    @JsonProperty("organizationId")
    public String getOrganizationId() {
        return organizationId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CredentialEndUser && equalTo((CredentialEndUser) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CredentialEndUser other) {
        return endUserId.equals(other.endUserId) && organizationId.equals(other.organizationId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.endUserId, this.organizationId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static EndUserIdStage builder() {
        return new Builder();
    }

    public interface EndUserIdStage {
        OrganizationIdStage endUserId(@NotNull String endUserId);

        Builder from(CredentialEndUser other);
    }

    public interface OrganizationIdStage {
        _FinalStage organizationId(@NotNull String organizationId);
    }

    public interface _FinalStage {
        CredentialEndUser build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements EndUserIdStage, OrganizationIdStage, _FinalStage {
        private String endUserId;

        private String organizationId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CredentialEndUser other) {
            endUserId(other.getEndUserId());
            organizationId(other.getOrganizationId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("endUserId")
        public OrganizationIdStage endUserId(@NotNull String endUserId) {
            this.endUserId = Objects.requireNonNull(endUserId, "endUserId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("organizationId")
        public _FinalStage organizationId(@NotNull String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId, "organizationId must not be null");
            return this;
        }

        @java.lang.Override
        public CredentialEndUser build() {
            return new CredentialEndUser(endUserId, organizationId, additionalProperties);
        }
    }
}
