/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateAzureCredentialDto.Builder.class)
public final class UpdateAzureCredentialDto {
    private final Optional<UpdateAzureCredentialDtoRegion> region;

    private final Optional<String> apiKey;

    private final Optional<String> name;

    private final Map<String, Object> additionalProperties;

    private UpdateAzureCredentialDto(
            Optional<UpdateAzureCredentialDtoRegion> region,
            Optional<String> apiKey,
            Optional<String> name,
            Map<String, Object> additionalProperties) {
        this.region = region;
        this.apiKey = apiKey;
        this.name = name;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("provider")
    public String getProvider() {
        return "azure";
    }

    /**
     * @return This is the service being used in Azure.
     */
    @JsonProperty("service")
    public String getService() {
        return "speech";
    }

    /**
     * @return This is the region of the Azure resource.
     */
    @JsonProperty("region")
    public Optional<UpdateAzureCredentialDtoRegion> getRegion() {
        return region;
    }

    /**
     * @return This is not returned in the API.
     */
    @JsonProperty("apiKey")
    public Optional<String> getApiKey() {
        return apiKey;
    }

    /**
     * @return This is the name of credential. This is just for your reference.
     */
    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateAzureCredentialDto && equalTo((UpdateAzureCredentialDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateAzureCredentialDto other) {
        return region.equals(other.region) && apiKey.equals(other.apiKey) && name.equals(other.name);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.region, this.apiKey, this.name);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<UpdateAzureCredentialDtoRegion> region = Optional.empty();

        private Optional<String> apiKey = Optional.empty();

        private Optional<String> name = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(UpdateAzureCredentialDto other) {
            region(other.getRegion());
            apiKey(other.getApiKey());
            name(other.getName());
            return this;
        }

        @JsonSetter(value = "region", nulls = Nulls.SKIP)
        public Builder region(Optional<UpdateAzureCredentialDtoRegion> region) {
            this.region = region;
            return this;
        }

        public Builder region(UpdateAzureCredentialDtoRegion region) {
            this.region = Optional.ofNullable(region);
            return this;
        }

        @JsonSetter(value = "apiKey", nulls = Nulls.SKIP)
        public Builder apiKey(Optional<String> apiKey) {
            this.apiKey = apiKey;
            return this;
        }

        public Builder apiKey(String apiKey) {
            this.apiKey = Optional.ofNullable(apiKey);
            return this;
        }

        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public Builder name(Optional<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        public UpdateAzureCredentialDto build() {
            return new UpdateAzureCredentialDto(region, apiKey, name, additionalProperties);
        }
    }
}
