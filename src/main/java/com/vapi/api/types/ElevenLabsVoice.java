/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ElevenLabsVoice.Builder.class)
public final class ElevenLabsVoice {
    private final Optional<Boolean> fillerInjectionEnabled;

    private final ElevenLabsVoiceId voiceId;

    private final Optional<Double> stability;

    private final Optional<Double> similarityBoost;

    private final Optional<Double> style;

    private final Optional<Boolean> useSpeakerBoost;

    private final Optional<Double> optimizeStreamingLatency;

    private final Optional<Boolean> enableSsmlParsing;

    private final Optional<ElevenLabsVoiceModel> model;

    private final Optional<String> language;

    private final Optional<ChunkPlan> chunkPlan;

    private final Map<String, Object> additionalProperties;

    private ElevenLabsVoice(
            Optional<Boolean> fillerInjectionEnabled,
            ElevenLabsVoiceId voiceId,
            Optional<Double> stability,
            Optional<Double> similarityBoost,
            Optional<Double> style,
            Optional<Boolean> useSpeakerBoost,
            Optional<Double> optimizeStreamingLatency,
            Optional<Boolean> enableSsmlParsing,
            Optional<ElevenLabsVoiceModel> model,
            Optional<String> language,
            Optional<ChunkPlan> chunkPlan,
            Map<String, Object> additionalProperties) {
        this.fillerInjectionEnabled = fillerInjectionEnabled;
        this.voiceId = voiceId;
        this.stability = stability;
        this.similarityBoost = similarityBoost;
        this.style = style;
        this.useSpeakerBoost = useSpeakerBoost;
        this.optimizeStreamingLatency = optimizeStreamingLatency;
        this.enableSsmlParsing = enableSsmlParsing;
        this.model = model;
        this.language = language;
        this.chunkPlan = chunkPlan;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This determines whether fillers are injected into the model output before inputting it into the voice provider.
     * <p>Default <code>false</code> because you can achieve better results with prompting the model.</p>
     */
    @JsonProperty("fillerInjectionEnabled")
    public Optional<Boolean> getFillerInjectionEnabled() {
        return fillerInjectionEnabled;
    }

    /**
     * @return This is the provider-specific ID that will be used. Ensure the Voice is present in your 11Labs Voice Library.
     */
    @JsonProperty("voiceId")
    public ElevenLabsVoiceId getVoiceId() {
        return voiceId;
    }

    /**
     * @return Defines the stability for voice settings.
     */
    @JsonProperty("stability")
    public Optional<Double> getStability() {
        return stability;
    }

    /**
     * @return Defines the similarity boost for voice settings.
     */
    @JsonProperty("similarityBoost")
    public Optional<Double> getSimilarityBoost() {
        return similarityBoost;
    }

    /**
     * @return Defines the style for voice settings.
     */
    @JsonProperty("style")
    public Optional<Double> getStyle() {
        return style;
    }

    /**
     * @return Defines the use speaker boost for voice settings.
     */
    @JsonProperty("useSpeakerBoost")
    public Optional<Boolean> getUseSpeakerBoost() {
        return useSpeakerBoost;
    }

    /**
     * @return Defines the optimize streaming latency for voice settings. Defaults to 3.
     */
    @JsonProperty("optimizeStreamingLatency")
    public Optional<Double> getOptimizeStreamingLatency() {
        return optimizeStreamingLatency;
    }

    /**
     * @return This enables the use of https://elevenlabs.io/docs/speech-synthesis/prompting#pronunciation. Defaults to false to save latency.
     * <p>@default false</p>
     */
    @JsonProperty("enableSsmlParsing")
    public Optional<Boolean> getEnableSsmlParsing() {
        return enableSsmlParsing;
    }

    /**
     * @return This is the model that will be used. Defaults to 'eleven_turbo_v2' if not specified.
     */
    @JsonProperty("model")
    public Optional<ElevenLabsVoiceModel> getModel() {
        return model;
    }

    /**
     * @return This is the language (ISO 639-1) that is enforced for the model. Currently only Turbo v2.5 supports language enforcement. For other models, an error will be returned if language code is provided.
     */
    @JsonProperty("language")
    public Optional<String> getLanguage() {
        return language;
    }

    /**
     * @return This is the plan for chunking the model output before it is sent to the voice provider.
     */
    @JsonProperty("chunkPlan")
    public Optional<ChunkPlan> getChunkPlan() {
        return chunkPlan;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ElevenLabsVoice && equalTo((ElevenLabsVoice) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ElevenLabsVoice other) {
        return fillerInjectionEnabled.equals(other.fillerInjectionEnabled)
                && voiceId.equals(other.voiceId)
                && stability.equals(other.stability)
                && similarityBoost.equals(other.similarityBoost)
                && style.equals(other.style)
                && useSpeakerBoost.equals(other.useSpeakerBoost)
                && optimizeStreamingLatency.equals(other.optimizeStreamingLatency)
                && enableSsmlParsing.equals(other.enableSsmlParsing)
                && model.equals(other.model)
                && language.equals(other.language)
                && chunkPlan.equals(other.chunkPlan);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.fillerInjectionEnabled,
                this.voiceId,
                this.stability,
                this.similarityBoost,
                this.style,
                this.useSpeakerBoost,
                this.optimizeStreamingLatency,
                this.enableSsmlParsing,
                this.model,
                this.language,
                this.chunkPlan);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static VoiceIdStage builder() {
        return new Builder();
    }

    public interface VoiceIdStage {
        _FinalStage voiceId(@NotNull ElevenLabsVoiceId voiceId);

        Builder from(ElevenLabsVoice other);
    }

    public interface _FinalStage {
        ElevenLabsVoice build();

        _FinalStage fillerInjectionEnabled(Optional<Boolean> fillerInjectionEnabled);

        _FinalStage fillerInjectionEnabled(Boolean fillerInjectionEnabled);

        _FinalStage stability(Optional<Double> stability);

        _FinalStage stability(Double stability);

        _FinalStage similarityBoost(Optional<Double> similarityBoost);

        _FinalStage similarityBoost(Double similarityBoost);

        _FinalStage style(Optional<Double> style);

        _FinalStage style(Double style);

        _FinalStage useSpeakerBoost(Optional<Boolean> useSpeakerBoost);

        _FinalStage useSpeakerBoost(Boolean useSpeakerBoost);

        _FinalStage optimizeStreamingLatency(Optional<Double> optimizeStreamingLatency);

        _FinalStage optimizeStreamingLatency(Double optimizeStreamingLatency);

        _FinalStage enableSsmlParsing(Optional<Boolean> enableSsmlParsing);

        _FinalStage enableSsmlParsing(Boolean enableSsmlParsing);

        _FinalStage model(Optional<ElevenLabsVoiceModel> model);

        _FinalStage model(ElevenLabsVoiceModel model);

        _FinalStage language(Optional<String> language);

        _FinalStage language(String language);

        _FinalStage chunkPlan(Optional<ChunkPlan> chunkPlan);

        _FinalStage chunkPlan(ChunkPlan chunkPlan);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements VoiceIdStage, _FinalStage {
        private ElevenLabsVoiceId voiceId;

        private Optional<ChunkPlan> chunkPlan = Optional.empty();

        private Optional<String> language = Optional.empty();

        private Optional<ElevenLabsVoiceModel> model = Optional.empty();

        private Optional<Boolean> enableSsmlParsing = Optional.empty();

        private Optional<Double> optimizeStreamingLatency = Optional.empty();

        private Optional<Boolean> useSpeakerBoost = Optional.empty();

        private Optional<Double> style = Optional.empty();

        private Optional<Double> similarityBoost = Optional.empty();

        private Optional<Double> stability = Optional.empty();

        private Optional<Boolean> fillerInjectionEnabled = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ElevenLabsVoice other) {
            fillerInjectionEnabled(other.getFillerInjectionEnabled());
            voiceId(other.getVoiceId());
            stability(other.getStability());
            similarityBoost(other.getSimilarityBoost());
            style(other.getStyle());
            useSpeakerBoost(other.getUseSpeakerBoost());
            optimizeStreamingLatency(other.getOptimizeStreamingLatency());
            enableSsmlParsing(other.getEnableSsmlParsing());
            model(other.getModel());
            language(other.getLanguage());
            chunkPlan(other.getChunkPlan());
            return this;
        }

        /**
         * <p>This is the provider-specific ID that will be used. Ensure the Voice is present in your 11Labs Voice Library.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("voiceId")
        public _FinalStage voiceId(@NotNull ElevenLabsVoiceId voiceId) {
            this.voiceId = Objects.requireNonNull(voiceId, "voiceId must not be null");
            return this;
        }

        /**
         * <p>This is the plan for chunking the model output before it is sent to the voice provider.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage chunkPlan(ChunkPlan chunkPlan) {
            this.chunkPlan = Optional.ofNullable(chunkPlan);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "chunkPlan", nulls = Nulls.SKIP)
        public _FinalStage chunkPlan(Optional<ChunkPlan> chunkPlan) {
            this.chunkPlan = chunkPlan;
            return this;
        }

        /**
         * <p>This is the language (ISO 639-1) that is enforced for the model. Currently only Turbo v2.5 supports language enforcement. For other models, an error will be returned if language code is provided.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage language(String language) {
            this.language = Optional.ofNullable(language);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "language", nulls = Nulls.SKIP)
        public _FinalStage language(Optional<String> language) {
            this.language = language;
            return this;
        }

        /**
         * <p>This is the model that will be used. Defaults to 'eleven_turbo_v2' if not specified.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage model(ElevenLabsVoiceModel model) {
            this.model = Optional.ofNullable(model);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "model", nulls = Nulls.SKIP)
        public _FinalStage model(Optional<ElevenLabsVoiceModel> model) {
            this.model = model;
            return this;
        }

        /**
         * <p>This enables the use of https://elevenlabs.io/docs/speech-synthesis/prompting#pronunciation. Defaults to false to save latency.</p>
         * <p>@default false</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage enableSsmlParsing(Boolean enableSsmlParsing) {
            this.enableSsmlParsing = Optional.ofNullable(enableSsmlParsing);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "enableSsmlParsing", nulls = Nulls.SKIP)
        public _FinalStage enableSsmlParsing(Optional<Boolean> enableSsmlParsing) {
            this.enableSsmlParsing = enableSsmlParsing;
            return this;
        }

        /**
         * <p>Defines the optimize streaming latency for voice settings. Defaults to 3.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage optimizeStreamingLatency(Double optimizeStreamingLatency) {
            this.optimizeStreamingLatency = Optional.ofNullable(optimizeStreamingLatency);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "optimizeStreamingLatency", nulls = Nulls.SKIP)
        public _FinalStage optimizeStreamingLatency(Optional<Double> optimizeStreamingLatency) {
            this.optimizeStreamingLatency = optimizeStreamingLatency;
            return this;
        }

        /**
         * <p>Defines the use speaker boost for voice settings.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage useSpeakerBoost(Boolean useSpeakerBoost) {
            this.useSpeakerBoost = Optional.ofNullable(useSpeakerBoost);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "useSpeakerBoost", nulls = Nulls.SKIP)
        public _FinalStage useSpeakerBoost(Optional<Boolean> useSpeakerBoost) {
            this.useSpeakerBoost = useSpeakerBoost;
            return this;
        }

        /**
         * <p>Defines the style for voice settings.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage style(Double style) {
            this.style = Optional.ofNullable(style);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "style", nulls = Nulls.SKIP)
        public _FinalStage style(Optional<Double> style) {
            this.style = style;
            return this;
        }

        /**
         * <p>Defines the similarity boost for voice settings.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage similarityBoost(Double similarityBoost) {
            this.similarityBoost = Optional.ofNullable(similarityBoost);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "similarityBoost", nulls = Nulls.SKIP)
        public _FinalStage similarityBoost(Optional<Double> similarityBoost) {
            this.similarityBoost = similarityBoost;
            return this;
        }

        /**
         * <p>Defines the stability for voice settings.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage stability(Double stability) {
            this.stability = Optional.ofNullable(stability);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "stability", nulls = Nulls.SKIP)
        public _FinalStage stability(Optional<Double> stability) {
            this.stability = stability;
            return this;
        }

        /**
         * <p>This determines whether fillers are injected into the model output before inputting it into the voice provider.</p>
         * <p>Default <code>false</code> because you can achieve better results with prompting the model.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage fillerInjectionEnabled(Boolean fillerInjectionEnabled) {
            this.fillerInjectionEnabled = Optional.ofNullable(fillerInjectionEnabled);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "fillerInjectionEnabled", nulls = Nulls.SKIP)
        public _FinalStage fillerInjectionEnabled(Optional<Boolean> fillerInjectionEnabled) {
            this.fillerInjectionEnabled = fillerInjectionEnabled;
            return this;
        }

        @java.lang.Override
        public ElevenLabsVoice build() {
            return new ElevenLabsVoice(
                    fillerInjectionEnabled,
                    voiceId,
                    stability,
                    similarityBoost,
                    style,
                    useSpeakerBoost,
                    optimizeStreamingLatency,
                    enableSsmlParsing,
                    model,
                    language,
                    chunkPlan,
                    additionalProperties);
        }
    }
}
