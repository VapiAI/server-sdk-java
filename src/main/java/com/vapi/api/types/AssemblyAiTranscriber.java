/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AssemblyAiTranscriber.Builder.class)
public final class AssemblyAiTranscriber {
    private final Optional<String> language;

    private final Optional<String> realtimeUrl;

    private final Optional<List<String>> wordBoost;

    private final Optional<Double> endUtteranceSilenceThreshold;

    private final Optional<Boolean> disablePartialTranscripts;

    private final Map<String, Object> additionalProperties;

    private AssemblyAiTranscriber(
            Optional<String> language,
            Optional<String> realtimeUrl,
            Optional<List<String>> wordBoost,
            Optional<Double> endUtteranceSilenceThreshold,
            Optional<Boolean> disablePartialTranscripts,
            Map<String, Object> additionalProperties) {
        this.language = language;
        this.realtimeUrl = realtimeUrl;
        this.wordBoost = wordBoost;
        this.endUtteranceSilenceThreshold = endUtteranceSilenceThreshold;
        this.disablePartialTranscripts = disablePartialTranscripts;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the language that will be set for the transcription.
     */
    @JsonProperty("language")
    public Optional<String> getLanguage() {
        return language;
    }

    /**
     * @return The WebSocket URL that the transcriber connects to.
     */
    @JsonProperty("realtimeUrl")
    public Optional<String> getRealtimeUrl() {
        return realtimeUrl;
    }

    /**
     * @return Add up to 2500 characters of custom vocabulary.
     */
    @JsonProperty("wordBoost")
    public Optional<List<String>> getWordBoost() {
        return wordBoost;
    }

    /**
     * @return The duration of the end utterance silence threshold in milliseconds.
     */
    @JsonProperty("endUtteranceSilenceThreshold")
    public Optional<Double> getEndUtteranceSilenceThreshold() {
        return endUtteranceSilenceThreshold;
    }

    /**
     * @return Disable partial transcripts.
     * Set to <code>true</code> to not receive partial transcripts. Defaults to <code>false</code>.
     */
    @JsonProperty("disablePartialTranscripts")
    public Optional<Boolean> getDisablePartialTranscripts() {
        return disablePartialTranscripts;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AssemblyAiTranscriber && equalTo((AssemblyAiTranscriber) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AssemblyAiTranscriber other) {
        return language.equals(other.language)
                && realtimeUrl.equals(other.realtimeUrl)
                && wordBoost.equals(other.wordBoost)
                && endUtteranceSilenceThreshold.equals(other.endUtteranceSilenceThreshold)
                && disablePartialTranscripts.equals(other.disablePartialTranscripts);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.language,
                this.realtimeUrl,
                this.wordBoost,
                this.endUtteranceSilenceThreshold,
                this.disablePartialTranscripts);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> language = Optional.empty();

        private Optional<String> realtimeUrl = Optional.empty();

        private Optional<List<String>> wordBoost = Optional.empty();

        private Optional<Double> endUtteranceSilenceThreshold = Optional.empty();

        private Optional<Boolean> disablePartialTranscripts = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(AssemblyAiTranscriber other) {
            language(other.getLanguage());
            realtimeUrl(other.getRealtimeUrl());
            wordBoost(other.getWordBoost());
            endUtteranceSilenceThreshold(other.getEndUtteranceSilenceThreshold());
            disablePartialTranscripts(other.getDisablePartialTranscripts());
            return this;
        }

        @JsonSetter(value = "language", nulls = Nulls.SKIP)
        public Builder language(Optional<String> language) {
            this.language = language;
            return this;
        }

        public Builder language(String language) {
            this.language = Optional.ofNullable(language);
            return this;
        }

        @JsonSetter(value = "realtimeUrl", nulls = Nulls.SKIP)
        public Builder realtimeUrl(Optional<String> realtimeUrl) {
            this.realtimeUrl = realtimeUrl;
            return this;
        }

        public Builder realtimeUrl(String realtimeUrl) {
            this.realtimeUrl = Optional.ofNullable(realtimeUrl);
            return this;
        }

        @JsonSetter(value = "wordBoost", nulls = Nulls.SKIP)
        public Builder wordBoost(Optional<List<String>> wordBoost) {
            this.wordBoost = wordBoost;
            return this;
        }

        public Builder wordBoost(List<String> wordBoost) {
            this.wordBoost = Optional.ofNullable(wordBoost);
            return this;
        }

        @JsonSetter(value = "endUtteranceSilenceThreshold", nulls = Nulls.SKIP)
        public Builder endUtteranceSilenceThreshold(Optional<Double> endUtteranceSilenceThreshold) {
            this.endUtteranceSilenceThreshold = endUtteranceSilenceThreshold;
            return this;
        }

        public Builder endUtteranceSilenceThreshold(Double endUtteranceSilenceThreshold) {
            this.endUtteranceSilenceThreshold = Optional.ofNullable(endUtteranceSilenceThreshold);
            return this;
        }

        @JsonSetter(value = "disablePartialTranscripts", nulls = Nulls.SKIP)
        public Builder disablePartialTranscripts(Optional<Boolean> disablePartialTranscripts) {
            this.disablePartialTranscripts = disablePartialTranscripts;
            return this;
        }

        public Builder disablePartialTranscripts(Boolean disablePartialTranscripts) {
            this.disablePartialTranscripts = Optional.ofNullable(disablePartialTranscripts);
            return this;
        }

        public AssemblyAiTranscriber build() {
            return new AssemblyAiTranscriber(
                    language,
                    realtimeUrl,
                    wordBoost,
                    endUtteranceSilenceThreshold,
                    disablePartialTranscripts,
                    additionalProperties);
        }
    }
}
