/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateWorkflowDto.Builder.class)
public final class CreateWorkflowDto {
    private final List<CreateWorkflowDtoNodesItem> nodes;

    private final String name;

    private final List<Edge> edges;

    private final Map<String, Object> additionalProperties;

    private CreateWorkflowDto(
            List<CreateWorkflowDtoNodesItem> nodes,
            String name,
            List<Edge> edges,
            Map<String, Object> additionalProperties) {
        this.nodes = nodes;
        this.name = name;
        this.edges = edges;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("nodes")
    public List<CreateWorkflowDtoNodesItem> getNodes() {
        return nodes;
    }

    @JsonProperty("name")
    public String getName() {
        return name;
    }

    @JsonProperty("edges")
    public List<Edge> getEdges() {
        return edges;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateWorkflowDto && equalTo((CreateWorkflowDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateWorkflowDto other) {
        return nodes.equals(other.nodes) && name.equals(other.name) && edges.equals(other.edges);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.nodes, this.name, this.edges);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NameStage builder() {
        return new Builder();
    }

    public interface NameStage {
        _FinalStage name(@NotNull String name);

        Builder from(CreateWorkflowDto other);
    }

    public interface _FinalStage {
        CreateWorkflowDto build();

        _FinalStage nodes(List<CreateWorkflowDtoNodesItem> nodes);

        _FinalStage addNodes(CreateWorkflowDtoNodesItem nodes);

        _FinalStage addAllNodes(List<CreateWorkflowDtoNodesItem> nodes);

        _FinalStage edges(List<Edge> edges);

        _FinalStage addEdges(Edge edges);

        _FinalStage addAllEdges(List<Edge> edges);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NameStage, _FinalStage {
        private String name;

        private List<Edge> edges = new ArrayList<>();

        private List<CreateWorkflowDtoNodesItem> nodes = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateWorkflowDto other) {
            nodes(other.getNodes());
            name(other.getName());
            edges(other.getEdges());
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public _FinalStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllEdges(List<Edge> edges) {
            this.edges.addAll(edges);
            return this;
        }

        @java.lang.Override
        public _FinalStage addEdges(Edge edges) {
            this.edges.add(edges);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "edges", nulls = Nulls.SKIP)
        public _FinalStage edges(List<Edge> edges) {
            this.edges.clear();
            this.edges.addAll(edges);
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllNodes(List<CreateWorkflowDtoNodesItem> nodes) {
            this.nodes.addAll(nodes);
            return this;
        }

        @java.lang.Override
        public _FinalStage addNodes(CreateWorkflowDtoNodesItem nodes) {
            this.nodes.add(nodes);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "nodes", nulls = Nulls.SKIP)
        public _FinalStage nodes(List<CreateWorkflowDtoNodesItem> nodes) {
            this.nodes.clear();
            this.nodes.addAll(nodes);
            return this;
        }

        @java.lang.Override
        public CreateWorkflowDto build() {
            return new CreateWorkflowDto(nodes, name, edges, additionalProperties);
        }
    }
}
