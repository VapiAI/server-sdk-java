/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.resources.testsuitetests;

import com.vapi.api.core.ClientOptions;
import com.vapi.api.core.RequestOptions;
import com.vapi.api.resources.testsuitetests.requests.TestSuiteTestControllerFindAllPaginatedRequest;
import com.vapi.api.resources.testsuitetests.types.TestSuiteTestControllerCreateRequest;
import com.vapi.api.resources.testsuitetests.types.TestSuiteTestControllerCreateResponse;
import com.vapi.api.resources.testsuitetests.types.TestSuiteTestControllerFindOneResponse;
import com.vapi.api.resources.testsuitetests.types.TestSuiteTestControllerRemoveResponse;
import com.vapi.api.resources.testsuitetests.types.TestSuiteTestControllerUpdateRequest;
import com.vapi.api.resources.testsuitetests.types.TestSuiteTestControllerUpdateResponse;
import com.vapi.api.types.TestSuiteTestsPaginatedResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncTestSuiteTestsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawTestSuiteTestsClient rawClient;

    public AsyncTestSuiteTestsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawTestSuiteTestsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawTestSuiteTestsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<TestSuiteTestsPaginatedResponse> testSuiteTestControllerFindAllPaginated(
            String testSuiteId) {
        return this.rawClient
                .testSuiteTestControllerFindAllPaginated(testSuiteId)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<TestSuiteTestsPaginatedResponse> testSuiteTestControllerFindAllPaginated(
            String testSuiteId, TestSuiteTestControllerFindAllPaginatedRequest request) {
        return this.rawClient
                .testSuiteTestControllerFindAllPaginated(testSuiteId, request)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<TestSuiteTestsPaginatedResponse> testSuiteTestControllerFindAllPaginated(
            String testSuiteId, TestSuiteTestControllerFindAllPaginatedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .testSuiteTestControllerFindAllPaginated(testSuiteId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<TestSuiteTestControllerCreateResponse> testSuiteTestControllerCreate(
            String testSuiteId, TestSuiteTestControllerCreateRequest request) {
        return this.rawClient
                .testSuiteTestControllerCreate(testSuiteId, request)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<TestSuiteTestControllerCreateResponse> testSuiteTestControllerCreate(
            String testSuiteId, TestSuiteTestControllerCreateRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .testSuiteTestControllerCreate(testSuiteId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<TestSuiteTestControllerFindOneResponse> testSuiteTestControllerFindOne(
            String testSuiteId, String id) {
        return this.rawClient.testSuiteTestControllerFindOne(testSuiteId, id).thenApply(response -> response.body());
    }

    public CompletableFuture<TestSuiteTestControllerFindOneResponse> testSuiteTestControllerFindOne(
            String testSuiteId, String id, RequestOptions requestOptions) {
        return this.rawClient
                .testSuiteTestControllerFindOne(testSuiteId, id, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<TestSuiteTestControllerRemoveResponse> testSuiteTestControllerRemove(
            String testSuiteId, String id) {
        return this.rawClient.testSuiteTestControllerRemove(testSuiteId, id).thenApply(response -> response.body());
    }

    public CompletableFuture<TestSuiteTestControllerRemoveResponse> testSuiteTestControllerRemove(
            String testSuiteId, String id, RequestOptions requestOptions) {
        return this.rawClient
                .testSuiteTestControllerRemove(testSuiteId, id, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<TestSuiteTestControllerUpdateResponse> testSuiteTestControllerUpdate(
            String testSuiteId, String id, TestSuiteTestControllerUpdateRequest request) {
        return this.rawClient
                .testSuiteTestControllerUpdate(testSuiteId, id, request)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<TestSuiteTestControllerUpdateResponse> testSuiteTestControllerUpdate(
            String testSuiteId,
            String id,
            TestSuiteTestControllerUpdateRequest request,
            RequestOptions requestOptions) {
        return this.rawClient
                .testSuiteTestControllerUpdate(testSuiteId, id, request, requestOptions)
                .thenApply(response -> response.body());
    }
}
