/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.resources.assistants.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vapi.api.types.AssistantHookAssistantSpeechInterrupted;
import com.vapi.api.types.AssistantHookCallEnding;
import com.vapi.api.types.AssistantHookCustomerSpeechInterrupted;
import java.util.Objects;
import java.util.Optional;

public final class UpdateAssistantDtoHooksItem {
    private final Value value;

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    private UpdateAssistantDtoHooksItem(Value value) {
        this.value = value;
    }

    public <T> T visit(Visitor<T> visitor) {
        return value.visit(visitor);
    }

    public static UpdateAssistantDtoHooksItem callEnding(AssistantHookCallEnding value) {
        return new UpdateAssistantDtoHooksItem(new CallEndingValue(value));
    }

    public static UpdateAssistantDtoHooksItem assistantSpeechInterrupted(
            AssistantHookAssistantSpeechInterrupted value) {
        return new UpdateAssistantDtoHooksItem(new AssistantSpeechInterruptedValue(value));
    }

    public static UpdateAssistantDtoHooksItem customerSpeechInterrupted(AssistantHookCustomerSpeechInterrupted value) {
        return new UpdateAssistantDtoHooksItem(new CustomerSpeechInterruptedValue(value));
    }

    public boolean isCallEnding() {
        return value instanceof CallEndingValue;
    }

    public boolean isAssistantSpeechInterrupted() {
        return value instanceof AssistantSpeechInterruptedValue;
    }

    public boolean isCustomerSpeechInterrupted() {
        return value instanceof CustomerSpeechInterruptedValue;
    }

    public boolean _isUnknown() {
        return value instanceof _UnknownValue;
    }

    public Optional<AssistantHookCallEnding> getCallEnding() {
        if (isCallEnding()) {
            return Optional.of(((CallEndingValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<AssistantHookAssistantSpeechInterrupted> getAssistantSpeechInterrupted() {
        if (isAssistantSpeechInterrupted()) {
            return Optional.of(((AssistantSpeechInterruptedValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<AssistantHookCustomerSpeechInterrupted> getCustomerSpeechInterrupted() {
        if (isCustomerSpeechInterrupted()) {
            return Optional.of(((CustomerSpeechInterruptedValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<Object> _getUnknown() {
        if (_isUnknown()) {
            return Optional.of(((_UnknownValue) value).value);
        }
        return Optional.empty();
    }

    @JsonValue
    private Value getValue() {
        return this.value;
    }

    public interface Visitor<T> {
        T visitCallEnding(AssistantHookCallEnding callEnding);

        T visitAssistantSpeechInterrupted(AssistantHookAssistantSpeechInterrupted assistantSpeechInterrupted);

        T visitCustomerSpeechInterrupted(AssistantHookCustomerSpeechInterrupted customerSpeechInterrupted);

        T _visitUnknown(Object unknownType);
    }

    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "on", visible = true, defaultImpl = _UnknownValue.class)
    @JsonSubTypes({
        @JsonSubTypes.Type(CallEndingValue.class),
        @JsonSubTypes.Type(AssistantSpeechInterruptedValue.class),
        @JsonSubTypes.Type(CustomerSpeechInterruptedValue.class)
    })
    @JsonIgnoreProperties(ignoreUnknown = true)
    private interface Value {
        <T> T visit(Visitor<T> visitor);
    }

    @JsonTypeName("call.ending")
    @JsonIgnoreProperties("on")
    private static final class CallEndingValue implements Value {
        @JsonUnwrapped
        private AssistantHookCallEnding value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private CallEndingValue() {}

        private CallEndingValue(AssistantHookCallEnding value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitCallEnding(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof CallEndingValue && equalTo((CallEndingValue) other);
        }

        private boolean equalTo(CallEndingValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "UpdateAssistantDtoHooksItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("assistant.speech.interrupted")
    @JsonIgnoreProperties("on")
    private static final class AssistantSpeechInterruptedValue implements Value {
        @JsonUnwrapped
        private AssistantHookAssistantSpeechInterrupted value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private AssistantSpeechInterruptedValue() {}

        private AssistantSpeechInterruptedValue(AssistantHookAssistantSpeechInterrupted value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitAssistantSpeechInterrupted(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof AssistantSpeechInterruptedValue && equalTo((AssistantSpeechInterruptedValue) other);
        }

        private boolean equalTo(AssistantSpeechInterruptedValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "UpdateAssistantDtoHooksItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("customer.speech.interrupted")
    @JsonIgnoreProperties("on")
    private static final class CustomerSpeechInterruptedValue implements Value {
        @JsonUnwrapped
        private AssistantHookCustomerSpeechInterrupted value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private CustomerSpeechInterruptedValue() {}

        private CustomerSpeechInterruptedValue(AssistantHookCustomerSpeechInterrupted value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitCustomerSpeechInterrupted(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof CustomerSpeechInterruptedValue && equalTo((CustomerSpeechInterruptedValue) other);
        }

        private boolean equalTo(CustomerSpeechInterruptedValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "UpdateAssistantDtoHooksItem{" + "value: " + value + "}";
        }
    }

    @JsonIgnoreProperties("on")
    private static final class _UnknownValue implements Value {
        private String type;

        @JsonValue
        private Object value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private _UnknownValue(@JsonProperty("value") Object value) {}

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor._visitUnknown(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof _UnknownValue && equalTo((_UnknownValue) other);
        }

        private boolean equalTo(_UnknownValue other) {
            return type.equals(other.type) && value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.type, this.value);
        }

        @java.lang.Override
        public String toString() {
            return "UpdateAssistantDtoHooksItem{" + "type: " + type + ", value: " + value + "}";
        }
    }
}
