/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.resources.workflow;

import com.vapi.api.core.ClientOptions;
import com.vapi.api.core.RequestOptions;
import com.vapi.api.resources.workflow.requests.UpdateWorkflowDto;
import com.vapi.api.types.CreateWorkflowDto;
import com.vapi.api.types.Workflow;
import java.util.List;

public class WorkflowClient {
    protected final ClientOptions clientOptions;

    private final RawWorkflowClient rawClient;

    public WorkflowClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawWorkflowClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawWorkflowClient withRawResponse() {
        return this.rawClient;
    }

    public List<Workflow> workflowControllerFindAll() {
        return this.rawClient.workflowControllerFindAll().body();
    }

    public List<Workflow> workflowControllerFindAll(RequestOptions requestOptions) {
        return this.rawClient.workflowControllerFindAll(requestOptions).body();
    }

    public Workflow workflowControllerCreate(CreateWorkflowDto request) {
        return this.rawClient.workflowControllerCreate(request).body();
    }

    public Workflow workflowControllerCreate(CreateWorkflowDto request, RequestOptions requestOptions) {
        return this.rawClient.workflowControllerCreate(request, requestOptions).body();
    }

    public Workflow workflowControllerFindOne(String id) {
        return this.rawClient.workflowControllerFindOne(id).body();
    }

    public Workflow workflowControllerFindOne(String id, RequestOptions requestOptions) {
        return this.rawClient.workflowControllerFindOne(id, requestOptions).body();
    }

    public Workflow workflowControllerDelete(String id) {
        return this.rawClient.workflowControllerDelete(id).body();
    }

    public Workflow workflowControllerDelete(String id, RequestOptions requestOptions) {
        return this.rawClient.workflowControllerDelete(id, requestOptions).body();
    }

    public Workflow workflowControllerUpdate(String id) {
        return this.rawClient.workflowControllerUpdate(id).body();
    }

    public Workflow workflowControllerUpdate(String id, UpdateWorkflowDto request) {
        return this.rawClient.workflowControllerUpdate(id, request).body();
    }

    public Workflow workflowControllerUpdate(String id, UpdateWorkflowDto request, RequestOptions requestOptions) {
        return this.rawClient
                .workflowControllerUpdate(id, request, requestOptions)
                .body();
    }
}
