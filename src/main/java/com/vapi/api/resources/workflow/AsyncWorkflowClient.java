/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.resources.workflow;

import com.vapi.api.core.ClientOptions;
import com.vapi.api.core.RequestOptions;
import com.vapi.api.resources.workflow.requests.UpdateWorkflowDto;
import com.vapi.api.types.CreateWorkflowDto;
import com.vapi.api.types.Workflow;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncWorkflowClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawWorkflowClient rawClient;

    public AsyncWorkflowClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawWorkflowClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawWorkflowClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<List<Workflow>> workflowControllerFindAll() {
        return this.rawClient.workflowControllerFindAll().thenApply(response -> response.body());
    }

    public CompletableFuture<List<Workflow>> workflowControllerFindAll(RequestOptions requestOptions) {
        return this.rawClient.workflowControllerFindAll(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Workflow> workflowControllerCreate(CreateWorkflowDto request) {
        return this.rawClient.workflowControllerCreate(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Workflow> workflowControllerCreate(
            CreateWorkflowDto request, RequestOptions requestOptions) {
        return this.rawClient.workflowControllerCreate(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Workflow> workflowControllerFindOne(String id) {
        return this.rawClient.workflowControllerFindOne(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Workflow> workflowControllerFindOne(String id, RequestOptions requestOptions) {
        return this.rawClient.workflowControllerFindOne(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Workflow> workflowControllerDelete(String id) {
        return this.rawClient.workflowControllerDelete(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Workflow> workflowControllerDelete(String id, RequestOptions requestOptions) {
        return this.rawClient.workflowControllerDelete(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Workflow> workflowControllerUpdate(String id) {
        return this.rawClient.workflowControllerUpdate(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Workflow> workflowControllerUpdate(String id, UpdateWorkflowDto request) {
        return this.rawClient.workflowControllerUpdate(id, request).thenApply(response -> response.body());
    }

    public CompletableFuture<Workflow> workflowControllerUpdate(
            String id, UpdateWorkflowDto request, RequestOptions requestOptions) {
        return this.rawClient
                .workflowControllerUpdate(id, request, requestOptions)
                .thenApply(response -> response.body());
    }
}
