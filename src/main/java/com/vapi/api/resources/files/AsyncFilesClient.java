/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.resources.files;

import com.vapi.api.core.ClientOptions;
import com.vapi.api.core.RequestOptions;
import com.vapi.api.resources.files.requests.CreateFileDto;
import com.vapi.api.resources.files.requests.UpdateFileDto;
import com.vapi.api.types.File;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncFilesClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawFilesClient rawClient;

    public AsyncFilesClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawFilesClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawFilesClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<List<File>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<List<File>> list(RequestOptions requestOptions) {
        return this.rawClient.list(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<File> create(java.io.File file, CreateFileDto request) {
        return this.rawClient.create(file, request).thenApply(response -> response.body());
    }

    public CompletableFuture<File> create(java.io.File file, CreateFileDto request, RequestOptions requestOptions) {
        return this.rawClient.create(file, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<File> get(String id) {
        return this.rawClient.get(id).thenApply(response -> response.body());
    }

    public CompletableFuture<File> get(String id, RequestOptions requestOptions) {
        return this.rawClient.get(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<File> delete(String id) {
        return this.rawClient.delete(id).thenApply(response -> response.body());
    }

    public CompletableFuture<File> delete(String id, RequestOptions requestOptions) {
        return this.rawClient.delete(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<File> update(String id) {
        return this.rawClient.update(id).thenApply(response -> response.body());
    }

    public CompletableFuture<File> update(String id, UpdateFileDto request) {
        return this.rawClient.update(id, request).thenApply(response -> response.body());
    }

    public CompletableFuture<File> update(String id, UpdateFileDto request, RequestOptions requestOptions) {
        return this.rawClient.update(id, request, requestOptions).thenApply(response -> response.body());
    }
}
