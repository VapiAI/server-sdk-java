/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.resources.testsuiteruns;

import com.vapi.api.core.ClientOptions;
import com.vapi.api.core.RequestOptions;
import com.vapi.api.resources.testsuiteruns.requests.CreateTestSuiteRunDto;
import com.vapi.api.resources.testsuiteruns.requests.TestSuiteRunControllerFindAllPaginatedRequest;
import com.vapi.api.resources.testsuiteruns.requests.UpdateTestSuiteRunDto;
import com.vapi.api.types.TestSuiteRun;
import com.vapi.api.types.TestSuiteRunsPaginatedResponse;

public class TestSuiteRunsClient {
    protected final ClientOptions clientOptions;

    private final RawTestSuiteRunsClient rawClient;

    public TestSuiteRunsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawTestSuiteRunsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawTestSuiteRunsClient withRawResponse() {
        return this.rawClient;
    }

    public TestSuiteRunsPaginatedResponse testSuiteRunControllerFindAllPaginated(String testSuiteId) {
        return this.rawClient
                .testSuiteRunControllerFindAllPaginated(testSuiteId)
                .body();
    }

    public TestSuiteRunsPaginatedResponse testSuiteRunControllerFindAllPaginated(
            String testSuiteId, TestSuiteRunControllerFindAllPaginatedRequest request) {
        return this.rawClient
                .testSuiteRunControllerFindAllPaginated(testSuiteId, request)
                .body();
    }

    public TestSuiteRunsPaginatedResponse testSuiteRunControllerFindAllPaginated(
            String testSuiteId, TestSuiteRunControllerFindAllPaginatedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .testSuiteRunControllerFindAllPaginated(testSuiteId, request, requestOptions)
                .body();
    }

    public TestSuiteRun testSuiteRunControllerCreate(String testSuiteId) {
        return this.rawClient.testSuiteRunControllerCreate(testSuiteId).body();
    }

    public TestSuiteRun testSuiteRunControllerCreate(String testSuiteId, CreateTestSuiteRunDto request) {
        return this.rawClient.testSuiteRunControllerCreate(testSuiteId, request).body();
    }

    public TestSuiteRun testSuiteRunControllerCreate(
            String testSuiteId, CreateTestSuiteRunDto request, RequestOptions requestOptions) {
        return this.rawClient
                .testSuiteRunControllerCreate(testSuiteId, request, requestOptions)
                .body();
    }

    public TestSuiteRun testSuiteRunControllerFindOne(String testSuiteId, String id) {
        return this.rawClient.testSuiteRunControllerFindOne(testSuiteId, id).body();
    }

    public TestSuiteRun testSuiteRunControllerFindOne(String testSuiteId, String id, RequestOptions requestOptions) {
        return this.rawClient
                .testSuiteRunControllerFindOne(testSuiteId, id, requestOptions)
                .body();
    }

    public TestSuiteRun testSuiteRunControllerRemove(String testSuiteId, String id) {
        return this.rawClient.testSuiteRunControllerRemove(testSuiteId, id).body();
    }

    public TestSuiteRun testSuiteRunControllerRemove(String testSuiteId, String id, RequestOptions requestOptions) {
        return this.rawClient
                .testSuiteRunControllerRemove(testSuiteId, id, requestOptions)
                .body();
    }

    public TestSuiteRun testSuiteRunControllerUpdate(String testSuiteId, String id) {
        return this.rawClient.testSuiteRunControllerUpdate(testSuiteId, id).body();
    }

    public TestSuiteRun testSuiteRunControllerUpdate(String testSuiteId, String id, UpdateTestSuiteRunDto request) {
        return this.rawClient
                .testSuiteRunControllerUpdate(testSuiteId, id, request)
                .body();
    }

    public TestSuiteRun testSuiteRunControllerUpdate(
            String testSuiteId, String id, UpdateTestSuiteRunDto request, RequestOptions requestOptions) {
        return this.rawClient
                .testSuiteRunControllerUpdate(testSuiteId, id, request, requestOptions)
                .body();
    }
}
